resources:
########################## INFRA AUTOMATION RESOURCES #########################
# REPO for all automation
  - name: auto_repo
    type: gitRepo
    integration: "demo_gh"
    pointer:
      sourceName: "avinci/demoPipes"
      branch: master

# AWS credentials
  - name: aws_creds
    type: integration
    integration: "demo_aws_key"

# Parameters for core vpc settings
  - name: net_conf
    type: params
    version:
      params:
        REGION: "us-east-1"
        AMI_VPC: "ami_vpc"
        AMI_NETWORK_CIDR: "200.0.0.0/16"
        AMI_PUBLIC_CIDR: "200.0.0.0/24"
        TEST_VPC: "test_vpc"
        TEST_NETWORK_CIDR: "210.0.0.0/16"
        TEST_PUBLIC_CIDR: "210.0.0.0/24"

# Parameters to hold VPC settings
  - name: vpc_conf
    type: params
    version:
      params:
        SEED: "initial_version"

# AWS pem key
  - name: aws_pem
    type: integration
    integration: "demo_aws_pem"

# Parameters to hold VPC settings
  - name: ami_sec_approved
    type: params
    version:
      params:
        SEED: "initial_version"

# Networking State for terraform provisioning
  - name: ami_tf_state
    type: state

# Test State for terraform provisioning
  - name: test_tf_state
    type: state

# Reference to ECS Test Cluster
  - name: test_env_ecs
    type: cluster
    integration: "demo_aws_key"
    pointer:
      sourceName : "test-aws"
      region: "us-east-1"

## Reference to ECS PROD Cluster
#  - name: prod_env_ecs
#    type: cluster
#    integration: "demo_aws_key"
#    pointer:
#      sourceName : "prod-aws"
#      region: "us-east-1"

####################### DOCKER Based WAR CI AUTO RESOURCES #######################
## Docker credentials
#  - name: docker_creds
#    type: integration
#    integration: "demo_dh"
#
## Source code for sample WAR app
#  - name: demo_doc_repo
#    type: gitRepo
#    integration: "demo_gh"
#    pointer:
#      sourceName: "avinci/samplejavatomcat"
#      branch: docker
#
# Docker Image packaging sample WAR
  - name: demo_doc_img
    type: image
    integration: "demo_dh"
    pointer:
      sourceName: "avinci/ci_push_docker_hub"
    seed:
      versionName: "latest"

## Docker Options for packaged WAR
#  - name: doc_img_opts
#    type: dockerOptions
#    version:
#      memory: 256
#      cpuShares: 256
#      portMappings:
#        - 8080:8080
#
################################ TEST AUTO RESOURCES #########################
## REPO of SIT code
#  - name: sit_repo
#    type: gitRepo
#    integration: "demo_gh"
#    pointer:
#      sourceName: "avinci/demoSIT"
#      branch: master
#
## SIT env vars for BOX
#  - name: sit_params
#    type: params
#    version:
#      params:
#        API_URL: "54.158.18.50:8080"
#        API_TOKEN: "NA"
#
############################## RELEASE AUTO RESOURCES #########################
## version resource
#  - name: seed_app_ver
#    type: version
#    seed:
#      versionName: "1.0.0"
#
## Version Param
#  - name: prod_app_ver
#    type: params
#    version:
#      params:
#        RELEASE_VER_NUMBER: "1.0.0"
#
############################ CD AUTO RESOURCES ################################
#
## Number of packaged WARs to deploy to Prod
#  - name: scale_app_prod
#    type: replicas
#    version:
#      count: 2
#





###################### NATIVE WAR CI/CD RESOURCES #########################
## VM Cluster
#  - name: demo_war_test_cls
#    type: cluster
#    integration: "demo-vm-cluster"
#
## Parameters to Run WAR
#  - name: demo_war_params
#    type: params
#    version:
#      params:
#        ENVIRONMENT: "FOO"

## JFROG WAR reference
#  - name: demo_war
#    type: file
#    integration: "demo-jf"
#    pointer:
#      sourceName: "builds/HelloWorld.war"
#    seed:
#      versionName: initial
#
## Default Version Param
#  - name: def_ver_param
#    type: params
#    version:
#      params:
#        RELEASE_VER_NUMBER: "latest"
